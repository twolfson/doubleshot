#!/usr/bin/env node

// Invoke via `doubleshot`
// Invoke via `doubleshot test`
// Invoke via `doubleshot --outline test/outline --content test/content`

// Load in modules
var fs = require('fs');

// Parse parameters
var program = require('commander');

// Doubleshot params
program
  .usage('[debug] [test dir] [--options]')
  .option('-O, --outline <pattern>', 'Path to outline files (minimatch accepted)')
  .option('-N, --content <pattern>', 'Path to content files (minimatch accepted)')

// Construct a doubleshot with mocha params
var doubleshot = require('./_doubleshot');

// Localize and fallback info from dir
// DEV: Always looks like node doubleshot arg1 arg2
var glob = require('glob'),
    testDir = process.argv[2],
    outlinePaths = program.outline,
    contentPaths = program.content;


// If there is no testDir or it is an option, fallback to `test`
if (!testDir || testDir.match(/^\-/)) {
  testDir = 'test';
}

// Helper function to filter for existing file paths
var path = require('path'),
    cwd = process.cwd();
function resolveFiles(params) {
  // Localize params
  var paths = params.paths,
      dir = params.dir,
      namespace = params.namespace;

  // Begin searching for files
  var files = [];

  // If there are no outline paths, attempt to locate them in dir
  if (!paths) {
    // Look for {{dir}}/*_outline* (e.g. test/doubleshot_outline.json)
    files = glob.sync(dir + '/*_' + namespace + '.{js,json,node}');

    // If none is found, look for {{dir}}/outline/**/* (e.g. test/outline/doubleshot.json)
    if (files.length === 0) {
      files = glob.sync(dir + '/' + namespace + '/**/*.{js,json,node}');
    }
  } else {
  // Otherwise, resolve paths via glob
    files = glob.sync(paths);
  }

  // If there are files, expand their paths
  if (files.length) {
    files = files.map(function getProperPath (filepath) {
      return path.join(cwd, filepath);
    });
  }

  // Return files
  return files;
}

// Resolve outlineFiles and contentFiles
var outlineFiles = resolveFiles({
      paths: outlinePaths,
      dir: testDir,
      namespace: 'outline'
    }),
    contentFiles = resolveFiles({
      paths: contentPaths,
      dir: testDir,
      namespace: 'content'
    });

// If there are no outline files, notify the user and quit
if (outlineFiles.length === 0) {
  console.error('No doubleshot outline files could be found.');
  console.error('Please place them as `test/{{name}}_outline.json`, `test/outline/{{name}}.json` or specify them via `--outline`.');
  console.log('');
  program.outputHelp();
  process.exit(1);
}

// Similarly notify for contentFiles
if (contentFiles.length === 0) {
  console.error('No doubleshot content files could be found.');
  console.error('Please place them as `test/{{name}}_content.js`, `test/content/{{name}}.js` or specify them via `--content`.');
  console.log('');
  program.outputHelp();
  process.exit(1);
}

// Load in files
var outlineArr = outlineFiles.map(require),
    contentArr = contentFiles.map(require);

// Add the outline and content to doubleshot
outlineArr.forEach(doubleshot.addOutline, doubleshot);
contentArr.forEach(doubleshot.addContent, doubleshot);

// Run doubleshot
doubleshot.run(function () {
  // DEV: On Windows machines, process.exit permaturely occurs before reporter is done. This is to delay that.
  setTimeout(function () {
    process.exit();
  }, 15);
});